{
	"id": "8e6371b5e711caf9dc4547210d61164c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.25;\n\nimport {IERC165} from \"../utils/IERC165.sol\";\n\n/**\n * @dev ERC-721 标准合规合约的必备接口。\n * 定义了非同质化代币（NFT）的核心功能规范，所有 ERC-721 代币合约必须实现此接口。\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev 当 `tokenId` 对应的代币从 `from` 地址转移到 `to` 地址时触发。\n     * @param from 转移发起地址\n     * @param to 接收地址\n     * @param tokenId 被转移的代币唯一标识\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev 当 `owner` 授权 `approved` 地址管理 `tokenId` 对应的代币时触发。\n     * @param owner 代币所有者地址\n     * @param approved 被授权管理代币的地址\n     * @param tokenId 被授权的代币唯一标识\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev 当 `owner` 授权或撤销（`approved` 为 true/false）`operator` 管理其所有资产时触发。\n     * @param owner 资产所有者地址\n     * @param operator 被授权的操作员地址\n     * @param approved 授权状态（true 为授权，false 为撤销）\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev 返回 `owner` 地址拥有的代币数量。\n     * @param owner 要查询的地址\n     * @return balance 该地址持有的 NFT 总数\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev 返回 `tokenId` 对应的代币所有者地址。\n     * \n     * 要求：\n     * - `tokenId` 必须是已存在的代币（未被销毁）。\n     * @param tokenId 代币唯一标识\n     * @return owner 代币所有者地址\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev 将 `tokenId` 代币从 `from` 安全转移到 `to`（带额外数据）。\n     * \"安全\"指：若接收地址是合约，必须实现 `IERC721Receiver-onERC721Received` 函数，否则转移失败。\n     * \n     * 要求：\n     * - `from` 不能是零地址。\n     * - `to` 不能是零地址。\n     * - `tokenId` 必须存在且归 `from` 所有。\n     * - 若调用者不是 `from`，则必须通过 {approve} 或 {setApprovalForAll} 获得转移授权。\n     * - 若 `to` 是合约，必须实现 `IERC721Receiver-onERC721Received` 函数（用于确认接收）。\n     * \n     * 触发 {Transfer} 事件。\n     * @param from 转移发起地址\n     * @param to 接收地址\n     * @param tokenId 被转移的代币唯一标识\n     * @param data 附加数据（会传递给接收合约的 `onERC721Received` 函数）\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev 将 `tokenId` 代币从 `from` 安全转移到 `to`（不带额外数据）。\n     * 与上一个函数功能一致，仅缺少 `data` 参数，适用于无需传递附加信息的场景。\n     * \n     * 要求：\n     * - 同 `safeTransferFrom`（带 data 参数的版本）。\n     * \n     * 触发 {Transfer} 事件。\n     * @param from 转移发起地址\n     * @param to 接收地址\n     * @param tokenId 被转移的代币唯一标识\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev 将 `tokenId` 代币从 `from` 转移到 `to`（非安全转移）。\n     * \n     * 警告：调用者需确保接收地址（尤其是合约）能处理 ERC-721 代币，否则代币可能永久锁定。\n     * 建议优先使用 {safeTransferFrom} 避免丢失风险，但需注意外部调用可能存在重入漏洞。\n     * \n     * 要求：\n     * - `from` 不能是零地址。\n     * - `to` 不能是零地址。\n     * - `tokenId` 必须归 `from` 所有。\n     * - 若调用者不是 `from`，则必须通过 {approve} 或 {setApprovalForAll} 获得转移授权。\n     * \n     * 触发 {Transfer} 事件。\n     * @param from 转移发起地址\n     * @param to 接收地址\n     * @param tokenId 被转移的代币唯一标识\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev 授权 `to` 地址转移 `tokenId` 对应的代币（单次授权）。\n     * 当代币被转移后，该授权会自动清除。\n     * 同一时间只能有一个地址获得授权，授权零地址会清除之前的授权。\n     * \n     * 要求：\n     * - 调用者必须是代币所有者或已被授权的操作员。\n     * - `tokenId` 必须存在。\n     * \n     * 触发 {Approval} 事件。\n     * @param to 被授权的地址\n     * @param tokenId 被授权转移的代币唯一标识\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev 授权或撤销 `operator` 作为调用者的操作员（批量授权）。\n     * 操作员可调用 {transferFrom} 或 {safeTransferFrom} 转移调用者拥有的所有代币。\n     * \n     * 要求：\n     * - `operator` 不能是零地址。\n     * \n     * 触发 {ApprovalForAll} 事件。\n     * @param operator 操作员地址\n     * @param approved 授权状态（true 为授权，false 为撤销）\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev 返回 `tokenId` 代币当前被授权的管理地址。\n     * \n     * 要求：\n     * - `tokenId` 必须存在。\n     * @param tokenId 代币唯一标识\n     * @return operator 被授权管理该代币的地址（零地址表示无授权）\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev 查看 `operator` 是否被允许管理 `owner` 的所有资产。\n     * 参考 {setApprovalForAll} 函数的授权逻辑。\n     * @param owner 资产所有者地址\n     * @param operator 操作员地址\n     * @return 是否拥有批量管理权限\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    \n}"
			},
			"utils/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.25;\n\ninterface IERC165 {\n    function supportsInterface(bytes4 interfaceId)external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"contracts/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-721 标准合规合约的必备接口。 定义了非同质化代币（NFT）的核心功能规范，所有 ERC-721 代币合约必须实现此接口。",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "当 `owner` 授权 `approved` 地址管理 `tokenId` 对应的代币时触发。",
								"params": {
									"approved": "被授权管理代币的地址",
									"owner": "代币所有者地址",
									"tokenId": "被授权的代币唯一标识"
								}
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "当 `owner` 授权或撤销（`approved` 为 true/false）`operator` 管理其所有资产时触发。",
								"params": {
									"approved": "授权状态（true 为授权，false 为撤销）",
									"operator": "被授权的操作员地址",
									"owner": "资产所有者地址"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "当 `tokenId` 对应的代币从 `from` 地址转移到 `to` 地址时触发。",
								"params": {
									"from": "转移发起地址",
									"to": "接收地址",
									"tokenId": "被转移的代币唯一标识"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "授权 `to` 地址转移 `tokenId` 对应的代币（单次授权）。 当代币被转移后，该授权会自动清除。 同一时间只能有一个地址获得授权，授权零地址会清除之前的授权。  要求： - 调用者必须是代币所有者或已被授权的操作员。 - `tokenId` 必须存在。  触发 {Approval} 事件。",
								"params": {
									"to": "被授权的地址",
									"tokenId": "被授权转移的代币唯一标识"
								}
							},
							"balanceOf(address)": {
								"details": "返回 `owner` 地址拥有的代币数量。",
								"params": {
									"owner": "要查询的地址"
								},
								"returns": {
									"balance": "该地址持有的 NFT 总数"
								}
							},
							"getApproved(uint256)": {
								"details": "返回 `tokenId` 代币当前被授权的管理地址。  要求： - `tokenId` 必须存在。",
								"params": {
									"tokenId": "代币唯一标识"
								},
								"returns": {
									"operator": "被授权管理该代币的地址（零地址表示无授权）"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "查看 `operator` 是否被允许管理 `owner` 的所有资产。 参考 {setApprovalForAll} 函数的授权逻辑。",
								"params": {
									"operator": "操作员地址",
									"owner": "资产所有者地址"
								},
								"returns": {
									"_0": "是否拥有批量管理权限"
								}
							},
							"ownerOf(uint256)": {
								"details": "返回 `tokenId` 对应的代币所有者地址。  要求： - `tokenId` 必须是已存在的代币（未被销毁）。",
								"params": {
									"tokenId": "代币唯一标识"
								},
								"returns": {
									"owner": "代币所有者地址"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "将 `tokenId` 代币从 `from` 安全转移到 `to`（不带额外数据）。 与上一个函数功能一致，仅缺少 `data` 参数，适用于无需传递附加信息的场景。  要求： - 同 `safeTransferFrom`（带 data 参数的版本）。  触发 {Transfer} 事件。",
								"params": {
									"from": "转移发起地址",
									"to": "接收地址",
									"tokenId": "被转移的代币唯一标识"
								}
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "将 `tokenId` 代币从 `from` 安全转移到 `to`（带额外数据）。 \"安全\"指：若接收地址是合约，必须实现 `IERC721Receiver-onERC721Received` 函数，否则转移失败。  要求： - `from` 不能是零地址。 - `to` 不能是零地址。 - `tokenId` 必须存在且归 `from` 所有。 - 若调用者不是 `from`，则必须通过 {approve} 或 {setApprovalForAll} 获得转移授权。 - 若 `to` 是合约，必须实现 `IERC721Receiver-onERC721Received` 函数（用于确认接收）。  触发 {Transfer} 事件。",
								"params": {
									"data": "附加数据（会传递给接收合约的 `onERC721Received` 函数）",
									"from": "转移发起地址",
									"to": "接收地址",
									"tokenId": "被转移的代币唯一标识"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "授权或撤销 `operator` 作为调用者的操作员（批量授权）。 操作员可调用 {transferFrom} 或 {safeTransferFrom} 转移调用者拥有的所有代币。  要求： - `operator` 不能是零地址。  触发 {ApprovalForAll} 事件。",
								"params": {
									"approved": "授权状态（true 为授权，false 为撤销）",
									"operator": "操作员地址"
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "将 `tokenId` 代币从 `from` 转移到 `to`（非安全转移）。  警告：调用者需确保接收地址（尤其是合约）能处理 ERC-721 代币，否则代币可能永久锁定。 建议优先使用 {safeTransferFrom} 避免丢失风险，但需注意外部调用可能存在重入漏洞。  要求： - `from` 不能是零地址。 - `to` 不能是零地址。 - `tokenId` 必须归 `from` 所有。 - 若调用者不是 `from`，则必须通过 {approve} 或 {setApprovalForAll} 获得转移授权。  触发 {Transfer} 事件。",
								"params": {
									"from": "转移发起地址",
									"to": "接收地址",
									"tokenId": "被转移的代币唯一标识"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-721 \\u6807\\u51c6\\u5408\\u89c4\\u5408\\u7ea6\\u7684\\u5fc5\\u5907\\u63a5\\u53e3\\u3002 \\u5b9a\\u4e49\\u4e86\\u975e\\u540c\\u8d28\\u5316\\u4ee3\\u5e01\\uff08NFT\\uff09\\u7684\\u6838\\u5fc3\\u529f\\u80fd\\u89c4\\u8303\\uff0c\\u6240\\u6709 ERC-721 \\u4ee3\\u5e01\\u5408\\u7ea6\\u5fc5\\u987b\\u5b9e\\u73b0\\u6b64\\u63a5\\u53e3\\u3002\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"\\u5f53 `owner` \\u6388\\u6743 `approved` \\u5730\\u5740\\u7ba1\\u7406 `tokenId` \\u5bf9\\u5e94\\u7684\\u4ee3\\u5e01\\u65f6\\u89e6\\u53d1\\u3002\",\"params\":{\"approved\":\"\\u88ab\\u6388\\u6743\\u7ba1\\u7406\\u4ee3\\u5e01\\u7684\\u5730\\u5740\",\"owner\":\"\\u4ee3\\u5e01\\u6240\\u6709\\u8005\\u5730\\u5740\",\"tokenId\":\"\\u88ab\\u6388\\u6743\\u7684\\u4ee3\\u5e01\\u552f\\u4e00\\u6807\\u8bc6\"}},\"ApprovalForAll(address,address,bool)\":{\"details\":\"\\u5f53 `owner` \\u6388\\u6743\\u6216\\u64a4\\u9500\\uff08`approved` \\u4e3a true/false\\uff09`operator` \\u7ba1\\u7406\\u5176\\u6240\\u6709\\u8d44\\u4ea7\\u65f6\\u89e6\\u53d1\\u3002\",\"params\":{\"approved\":\"\\u6388\\u6743\\u72b6\\u6001\\uff08true \\u4e3a\\u6388\\u6743\\uff0cfalse \\u4e3a\\u64a4\\u9500\\uff09\",\"operator\":\"\\u88ab\\u6388\\u6743\\u7684\\u64cd\\u4f5c\\u5458\\u5730\\u5740\",\"owner\":\"\\u8d44\\u4ea7\\u6240\\u6709\\u8005\\u5730\\u5740\"}},\"Transfer(address,address,uint256)\":{\"details\":\"\\u5f53 `tokenId` \\u5bf9\\u5e94\\u7684\\u4ee3\\u5e01\\u4ece `from` \\u5730\\u5740\\u8f6c\\u79fb\\u5230 `to` \\u5730\\u5740\\u65f6\\u89e6\\u53d1\\u3002\",\"params\":{\"from\":\"\\u8f6c\\u79fb\\u53d1\\u8d77\\u5730\\u5740\",\"to\":\"\\u63a5\\u6536\\u5730\\u5740\",\"tokenId\":\"\\u88ab\\u8f6c\\u79fb\\u7684\\u4ee3\\u5e01\\u552f\\u4e00\\u6807\\u8bc6\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"\\u6388\\u6743 `to` \\u5730\\u5740\\u8f6c\\u79fb `tokenId` \\u5bf9\\u5e94\\u7684\\u4ee3\\u5e01\\uff08\\u5355\\u6b21\\u6388\\u6743\\uff09\\u3002 \\u5f53\\u4ee3\\u5e01\\u88ab\\u8f6c\\u79fb\\u540e\\uff0c\\u8be5\\u6388\\u6743\\u4f1a\\u81ea\\u52a8\\u6e05\\u9664\\u3002 \\u540c\\u4e00\\u65f6\\u95f4\\u53ea\\u80fd\\u6709\\u4e00\\u4e2a\\u5730\\u5740\\u83b7\\u5f97\\u6388\\u6743\\uff0c\\u6388\\u6743\\u96f6\\u5730\\u5740\\u4f1a\\u6e05\\u9664\\u4e4b\\u524d\\u7684\\u6388\\u6743\\u3002  \\u8981\\u6c42\\uff1a - \\u8c03\\u7528\\u8005\\u5fc5\\u987b\\u662f\\u4ee3\\u5e01\\u6240\\u6709\\u8005\\u6216\\u5df2\\u88ab\\u6388\\u6743\\u7684\\u64cd\\u4f5c\\u5458\\u3002 - `tokenId` \\u5fc5\\u987b\\u5b58\\u5728\\u3002  \\u89e6\\u53d1 {Approval} \\u4e8b\\u4ef6\\u3002\",\"params\":{\"to\":\"\\u88ab\\u6388\\u6743\\u7684\\u5730\\u5740\",\"tokenId\":\"\\u88ab\\u6388\\u6743\\u8f6c\\u79fb\\u7684\\u4ee3\\u5e01\\u552f\\u4e00\\u6807\\u8bc6\"}},\"balanceOf(address)\":{\"details\":\"\\u8fd4\\u56de `owner` \\u5730\\u5740\\u62e5\\u6709\\u7684\\u4ee3\\u5e01\\u6570\\u91cf\\u3002\",\"params\":{\"owner\":\"\\u8981\\u67e5\\u8be2\\u7684\\u5730\\u5740\"},\"returns\":{\"balance\":\"\\u8be5\\u5730\\u5740\\u6301\\u6709\\u7684 NFT \\u603b\\u6570\"}},\"getApproved(uint256)\":{\"details\":\"\\u8fd4\\u56de `tokenId` \\u4ee3\\u5e01\\u5f53\\u524d\\u88ab\\u6388\\u6743\\u7684\\u7ba1\\u7406\\u5730\\u5740\\u3002  \\u8981\\u6c42\\uff1a - `tokenId` \\u5fc5\\u987b\\u5b58\\u5728\\u3002\",\"params\":{\"tokenId\":\"\\u4ee3\\u5e01\\u552f\\u4e00\\u6807\\u8bc6\"},\"returns\":{\"operator\":\"\\u88ab\\u6388\\u6743\\u7ba1\\u7406\\u8be5\\u4ee3\\u5e01\\u7684\\u5730\\u5740\\uff08\\u96f6\\u5730\\u5740\\u8868\\u793a\\u65e0\\u6388\\u6743\\uff09\"}},\"isApprovedForAll(address,address)\":{\"details\":\"\\u67e5\\u770b `operator` \\u662f\\u5426\\u88ab\\u5141\\u8bb8\\u7ba1\\u7406 `owner` \\u7684\\u6240\\u6709\\u8d44\\u4ea7\\u3002 \\u53c2\\u8003 {setApprovalForAll} \\u51fd\\u6570\\u7684\\u6388\\u6743\\u903b\\u8f91\\u3002\",\"params\":{\"operator\":\"\\u64cd\\u4f5c\\u5458\\u5730\\u5740\",\"owner\":\"\\u8d44\\u4ea7\\u6240\\u6709\\u8005\\u5730\\u5740\"},\"returns\":{\"_0\":\"\\u662f\\u5426\\u62e5\\u6709\\u6279\\u91cf\\u7ba1\\u7406\\u6743\\u9650\"}},\"ownerOf(uint256)\":{\"details\":\"\\u8fd4\\u56de `tokenId` \\u5bf9\\u5e94\\u7684\\u4ee3\\u5e01\\u6240\\u6709\\u8005\\u5730\\u5740\\u3002  \\u8981\\u6c42\\uff1a - `tokenId` \\u5fc5\\u987b\\u662f\\u5df2\\u5b58\\u5728\\u7684\\u4ee3\\u5e01\\uff08\\u672a\\u88ab\\u9500\\u6bc1\\uff09\\u3002\",\"params\":{\"tokenId\":\"\\u4ee3\\u5e01\\u552f\\u4e00\\u6807\\u8bc6\"},\"returns\":{\"owner\":\"\\u4ee3\\u5e01\\u6240\\u6709\\u8005\\u5730\\u5740\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"\\u5c06 `tokenId` \\u4ee3\\u5e01\\u4ece `from` \\u5b89\\u5168\\u8f6c\\u79fb\\u5230 `to`\\uff08\\u4e0d\\u5e26\\u989d\\u5916\\u6570\\u636e\\uff09\\u3002 \\u4e0e\\u4e0a\\u4e00\\u4e2a\\u51fd\\u6570\\u529f\\u80fd\\u4e00\\u81f4\\uff0c\\u4ec5\\u7f3a\\u5c11 `data` \\u53c2\\u6570\\uff0c\\u9002\\u7528\\u4e8e\\u65e0\\u9700\\u4f20\\u9012\\u9644\\u52a0\\u4fe1\\u606f\\u7684\\u573a\\u666f\\u3002  \\u8981\\u6c42\\uff1a - \\u540c `safeTransferFrom`\\uff08\\u5e26 data \\u53c2\\u6570\\u7684\\u7248\\u672c\\uff09\\u3002  \\u89e6\\u53d1 {Transfer} \\u4e8b\\u4ef6\\u3002\",\"params\":{\"from\":\"\\u8f6c\\u79fb\\u53d1\\u8d77\\u5730\\u5740\",\"to\":\"\\u63a5\\u6536\\u5730\\u5740\",\"tokenId\":\"\\u88ab\\u8f6c\\u79fb\\u7684\\u4ee3\\u5e01\\u552f\\u4e00\\u6807\\u8bc6\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"\\u5c06 `tokenId` \\u4ee3\\u5e01\\u4ece `from` \\u5b89\\u5168\\u8f6c\\u79fb\\u5230 `to`\\uff08\\u5e26\\u989d\\u5916\\u6570\\u636e\\uff09\\u3002 \\\"\\u5b89\\u5168\\\"\\u6307\\uff1a\\u82e5\\u63a5\\u6536\\u5730\\u5740\\u662f\\u5408\\u7ea6\\uff0c\\u5fc5\\u987b\\u5b9e\\u73b0 `IERC721Receiver-onERC721Received` \\u51fd\\u6570\\uff0c\\u5426\\u5219\\u8f6c\\u79fb\\u5931\\u8d25\\u3002  \\u8981\\u6c42\\uff1a - `from` \\u4e0d\\u80fd\\u662f\\u96f6\\u5730\\u5740\\u3002 - `to` \\u4e0d\\u80fd\\u662f\\u96f6\\u5730\\u5740\\u3002 - `tokenId` \\u5fc5\\u987b\\u5b58\\u5728\\u4e14\\u5f52 `from` \\u6240\\u6709\\u3002 - \\u82e5\\u8c03\\u7528\\u8005\\u4e0d\\u662f `from`\\uff0c\\u5219\\u5fc5\\u987b\\u901a\\u8fc7 {approve} \\u6216 {setApprovalForAll} \\u83b7\\u5f97\\u8f6c\\u79fb\\u6388\\u6743\\u3002 - \\u82e5 `to` \\u662f\\u5408\\u7ea6\\uff0c\\u5fc5\\u987b\\u5b9e\\u73b0 `IERC721Receiver-onERC721Received` \\u51fd\\u6570\\uff08\\u7528\\u4e8e\\u786e\\u8ba4\\u63a5\\u6536\\uff09\\u3002  \\u89e6\\u53d1 {Transfer} \\u4e8b\\u4ef6\\u3002\",\"params\":{\"data\":\"\\u9644\\u52a0\\u6570\\u636e\\uff08\\u4f1a\\u4f20\\u9012\\u7ed9\\u63a5\\u6536\\u5408\\u7ea6\\u7684 `onERC721Received` \\u51fd\\u6570\\uff09\",\"from\":\"\\u8f6c\\u79fb\\u53d1\\u8d77\\u5730\\u5740\",\"to\":\"\\u63a5\\u6536\\u5730\\u5740\",\"tokenId\":\"\\u88ab\\u8f6c\\u79fb\\u7684\\u4ee3\\u5e01\\u552f\\u4e00\\u6807\\u8bc6\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"\\u6388\\u6743\\u6216\\u64a4\\u9500 `operator` \\u4f5c\\u4e3a\\u8c03\\u7528\\u8005\\u7684\\u64cd\\u4f5c\\u5458\\uff08\\u6279\\u91cf\\u6388\\u6743\\uff09\\u3002 \\u64cd\\u4f5c\\u5458\\u53ef\\u8c03\\u7528 {transferFrom} \\u6216 {safeTransferFrom} \\u8f6c\\u79fb\\u8c03\\u7528\\u8005\\u62e5\\u6709\\u7684\\u6240\\u6709\\u4ee3\\u5e01\\u3002  \\u8981\\u6c42\\uff1a - `operator` \\u4e0d\\u80fd\\u662f\\u96f6\\u5730\\u5740\\u3002  \\u89e6\\u53d1 {ApprovalForAll} \\u4e8b\\u4ef6\\u3002\",\"params\":{\"approved\":\"\\u6388\\u6743\\u72b6\\u6001\\uff08true \\u4e3a\\u6388\\u6743\\uff0cfalse \\u4e3a\\u64a4\\u9500\\uff09\",\"operator\":\"\\u64cd\\u4f5c\\u5458\\u5730\\u5740\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"\\u5c06 `tokenId` \\u4ee3\\u5e01\\u4ece `from` \\u8f6c\\u79fb\\u5230 `to`\\uff08\\u975e\\u5b89\\u5168\\u8f6c\\u79fb\\uff09\\u3002  \\u8b66\\u544a\\uff1a\\u8c03\\u7528\\u8005\\u9700\\u786e\\u4fdd\\u63a5\\u6536\\u5730\\u5740\\uff08\\u5c24\\u5176\\u662f\\u5408\\u7ea6\\uff09\\u80fd\\u5904\\u7406 ERC-721 \\u4ee3\\u5e01\\uff0c\\u5426\\u5219\\u4ee3\\u5e01\\u53ef\\u80fd\\u6c38\\u4e45\\u9501\\u5b9a\\u3002 \\u5efa\\u8bae\\u4f18\\u5148\\u4f7f\\u7528 {safeTransferFrom} \\u907f\\u514d\\u4e22\\u5931\\u98ce\\u9669\\uff0c\\u4f46\\u9700\\u6ce8\\u610f\\u5916\\u90e8\\u8c03\\u7528\\u53ef\\u80fd\\u5b58\\u5728\\u91cd\\u5165\\u6f0f\\u6d1e\\u3002  \\u8981\\u6c42\\uff1a - `from` \\u4e0d\\u80fd\\u662f\\u96f6\\u5730\\u5740\\u3002 - `to` \\u4e0d\\u80fd\\u662f\\u96f6\\u5730\\u5740\\u3002 - `tokenId` \\u5fc5\\u987b\\u5f52 `from` \\u6240\\u6709\\u3002 - \\u82e5\\u8c03\\u7528\\u8005\\u4e0d\\u662f `from`\\uff0c\\u5219\\u5fc5\\u987b\\u901a\\u8fc7 {approve} \\u6216 {setApprovalForAll} \\u83b7\\u5f97\\u8f6c\\u79fb\\u6388\\u6743\\u3002  \\u89e6\\u53d1 {Transfer} \\u4e8b\\u4ef6\\u3002\",\"params\":{\"from\":\"\\u8f6c\\u79fb\\u53d1\\u8d77\\u5730\\u5740\",\"to\":\"\\u63a5\\u6536\\u5730\\u5740\",\"tokenId\":\"\\u88ab\\u8f6c\\u79fb\\u7684\\u4ee3\\u5e01\\u552f\\u4e00\\u6807\\u8bc6\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IERC721.sol\":{\"keccak256\":\"0x549cb1efa76bced8f1c3a658c826408846b40a0d74e22de4d1f9b036932f6561\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://69104f8e79b94c8771f6f116bbf8881f84de757a06ac62005776002555410d84\",\"dweb:/ipfs/QmSe4eEGooJLvbKNct3gVr6ZNdeavdsacCrYfieQwubapd\"]},\"utils/IERC165.sol\":{\"keccak256\":\"0x6494ba40686b1df40d1f261c24d55d2f8affb5958eb2498b4678a143851ee8b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d5a197a9d52fc91e1a88d2703cfd60a89c23017d4a92986c3cfff81ea38ddc1\",\"dweb:/ipfs/QmQaMAJJ2viXKPwpXPHGxUm3gqw9Bp1EM4jefrW6UFmdkE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"utils/IERC165.sol\":{\"keccak256\":\"0x6494ba40686b1df40d1f261c24d55d2f8affb5958eb2498b4678a143851ee8b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d5a197a9d52fc91e1a88d2703cfd60a89c23017d4a92986c3cfff81ea38ddc1\",\"dweb:/ipfs/QmQaMAJJ2viXKPwpXPHGxUm3gqw9Bp1EM4jefrW6UFmdkE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							126
						],
						"IERC721": [
							116
						]
					},
					"id": 117,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "utils/IERC165.sol",
							"file": "../utils/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 117,
							"sourceUnit": 127,
							"src": "58:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 126,
										"src": "66:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "IERC165",
										"nameLocations": [
											"302:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "302:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "302:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "105:175:0",
								"text": " @dev ERC-721 标准合规合约的必备接口。\n 定义了非同质化代币（NFT）的核心功能规范，所有 ERC-721 代币合约必须实现此接口。"
							},
							"fullyImplemented": false,
							"id": 116,
							"linearizedBaseContracts": [
								116,
								126
							],
							"name": "IERC721",
							"nameLocation": "291:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 7,
										"nodeType": "StructuredDocumentation",
										"src": "316:224:0",
										"text": " @dev 当 `tokenId` 对应的代币从 `from` 地址转移到 `to` 地址时触发。\n @param from 转移发起地址\n @param to 接收地址\n @param tokenId 被转移的代币唯一标识"
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 15,
									"name": "Transfer",
									"nameLocation": "551:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "576:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "560:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "598:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "582:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "618:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "602:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:67:0"
									},
									"src": "545:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "633:253:0",
										"text": " @dev 当 `owner` 授权 `approved` 地址管理 `tokenId` 对应的代币时触发。\n @param owner 代币所有者地址\n @param approved 被授权管理代币的地址\n @param tokenId 被授权的代币唯一标识"
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 24,
									"name": "Approval",
									"nameLocation": "897:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "922:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "906:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "945:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "929:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "971:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "955:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "905:74:0"
									},
									"src": "891:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "986:293:0",
										"text": " @dev 当 `owner` 授权或撤销（`approved` 为 true/false）`operator` 管理其所有资产时触发。\n @param owner 资产所有者地址\n @param operator 被授权的操作员地址\n @param approved 授权状态（true 为授权，false 为撤销）"
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 33,
									"name": "ApprovalForAll",
									"nameLocation": "1290:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1321:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1305:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1344:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1328:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1359:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1354:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 30,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1354:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:64:0"
									},
									"src": "1284:85:0"
								},
								{
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1375:161:0",
										"text": " @dev 返回 `owner` 地址拥有的代币数量。\n @param owner 要查询的地址\n @return balance 该地址持有的 NFT 总数"
									},
									"functionSelector": "70a08231",
									"id": 41,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1550:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1559:15:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1606:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1598:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1597:17:0"
									},
									"scope": 116,
									"src": "1541:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1621:251:0",
										"text": " @dev 返回 `tokenId` 对应的代币所有者地址。\n \n 要求：\n - `tokenId` 必须是已存在的代币（未被销毁）。\n @param tokenId 代币唯一标识\n @return owner 代币所有者地址"
									},
									"functionSelector": "6352211e",
									"id": 49,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1886:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1902:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1894:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:17:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1942:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "1934:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1933:15:0"
									},
									"scope": 116,
									"src": "1877:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 50,
										"nodeType": "StructuredDocumentation",
										"src": "1955:856:0",
										"text": " @dev 将 `tokenId` 代币从 `from` 安全转移到 `to`（带额外数据）。\n \"安全\"指：若接收地址是合约，必须实现 `IERC721Receiver-onERC721Received` 函数，否则转移失败。\n \n 要求：\n - `from` 不能是零地址。\n - `to` 不能是零地址。\n - `tokenId` 必须存在且归 `from` 所有。\n - 若调用者不是 `from`，则必须通过 {approve} 或 {setApprovalForAll} 获得转移授权。\n - 若 `to` 是合约，必须实现 `IERC721Receiver-onERC721Received` 函数（用于确认接收）。\n \n 触发 {Transfer} 事件。\n @param from 转移发起地址\n @param to 接收地址\n @param tokenId 被转移的代币唯一标识\n @param data 附加数据（会传递给接收合约的 `onERC721Received` 函数）"
									},
									"functionSelector": "b88d4fde",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2825:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2850:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2842:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2864:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2856:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2876:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2868:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2900:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2885:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2885:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2841:64:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2914:0:0"
									},
									"scope": 116,
									"src": "2816:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "2921:468:0",
										"text": " @dev 将 `tokenId` 代币从 `from` 安全转移到 `to`（不带额外数据）。\n 与上一个函数功能一致，仅缺少 `data` 参数，适用于无需传递附加信息的场景。\n \n 要求：\n - 同 `safeTransferFrom`（带 data 参数的版本）。\n \n 触发 {Transfer} 事件。\n @param from 转移发起地址\n @param to 接收地址\n @param tokenId 被转移的代币唯一标识"
									},
									"functionSelector": "42842e0e",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3403:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3428:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3420:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3442:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3434:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3434:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3454:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3446:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3419:43:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3471:0:0"
									},
									"scope": 116,
									"src": "3394:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3478:765:0",
										"text": " @dev 将 `tokenId` 代币从 `from` 转移到 `to`（非安全转移）。\n \n 警告：调用者需确保接收地址（尤其是合约）能处理 ERC-721 代币，否则代币可能永久锁定。\n 建议优先使用 {safeTransferFrom} 避免丢失风险，但需注意外部调用可能存在重入漏洞。\n \n 要求：\n - `from` 不能是零地址。\n - `to` 不能是零地址。\n - `tokenId` 必须归 `from` 所有。\n - 若调用者不是 `from`，则必须通过 {approve} 或 {setApprovalForAll} 获得转移授权。\n \n 触发 {Transfer} 事件。\n @param from 转移发起地址\n @param to 接收地址\n @param tokenId 被转移的代币唯一标识"
									},
									"functionSelector": "23b872dd",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4257:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4278:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "4270:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4292:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "4284:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4304:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "4296:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4269:43:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4321:0:0"
									},
									"scope": 116,
									"src": "4248:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "4328:523:0",
										"text": " @dev 授权 `to` 地址转移 `tokenId` 对应的代币（单次授权）。\n 当代币被转移后，该授权会自动清除。\n 同一时间只能有一个地址获得授权，授权零地址会清除之前的授权。\n \n 要求：\n - 调用者必须是代币所有者或已被授权的操作员。\n - `tokenId` 必须存在。\n \n 触发 {Approval} 事件。\n @param to 被授权的地址\n @param tokenId 被授权转移的代币唯一标识"
									},
									"functionSelector": "095ea7b3",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4865:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4881:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4873:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "4885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4872:29:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4910:0:0"
									},
									"scope": 116,
									"src": "4856:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "4917:432:0",
										"text": " @dev 授权或撤销 `operator` 作为调用者的操作员（批量授权）。\n 操作员可调用 {transferFrom} 或 {safeTransferFrom} 转移调用者拥有的所有代币。\n \n 要求：\n - `operator` 不能是零地址。\n \n 触发 {ApprovalForAll} 事件。\n @param operator 操作员地址\n @param approved 授权状态（true 为授权，false 为撤销）"
									},
									"functionSelector": "a22cb465",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5363:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5389:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "5381:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5404:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "5399:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5399:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5380:33:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5422:0:0"
									},
									"scope": 116,
									"src": "5354:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "5429:269:0",
										"text": " @dev 返回 `tokenId` 代币当前被授权的管理地址。\n \n 要求：\n - `tokenId` 必须存在。\n @param tokenId 代币唯一标识\n @return operator 被授权管理该代币的地址（零地址表示无授权）"
									},
									"functionSelector": "081812fc",
									"id": 105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5712:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5732:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "5724:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5723:17:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5772:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "5764:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5763:18:0"
									},
									"scope": 116,
									"src": "5703:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "5788:276:0",
										"text": " @dev 查看 `operator` 是否被允许管理 `owner` 的所有资产。\n 参考 {setApprovalForAll} 函数的授权逻辑。\n @param owner 资产所有者地址\n @param operator 操作员地址\n @return 是否拥有批量管理权限"
									},
									"functionSelector": "e985e9c5",
									"id": 115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "6078:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6103:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "6095:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6095:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6118:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "6110:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6094:33:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "6151:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6151:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6150:6:0"
									},
									"scope": 116,
									"src": "6069:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 117,
							"src": "281:5884:0",
							"usedErrors": [],
							"usedEvents": [
								15,
								24,
								33
							]
						}
					],
					"src": "32:6133:0"
				},
				"id": 0
			},
			"utils/IERC165.sol": {
				"ast": {
					"absolutePath": "utils/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 118,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "IERC165",
							"nameLocation": "68:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "01ffc9a7",
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "91:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "116:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "109:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 119,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "109:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:20:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "151:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "151:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "150:6:1"
									},
									"scope": 126,
									"src": "82:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 127,
							"src": "58:101:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:127:1"
				},
				"id": 1
			}
		}
	}
}